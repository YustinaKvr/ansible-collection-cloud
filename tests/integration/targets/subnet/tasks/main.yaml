---
- name: Subnet tests
  module_defaults:
    opentelekomcloud.cloud.vpc:
      cloud: "{{ test_cloud }}"
    opentelekomcloud.cloud.subnet:
      cloud: "{{ test_cloud }}"

  block:
    - name: Set random prefix
      ansible.builtin.set_fact:
        prefix: "{{ 99999999 | random | to_uuid | hash('md5') }}"

    - name: Set initial facts
      ansible.builtin.set_fact:
        vpc_name: "{{ ( prefix + '_vpc') }}"
        subnet_name: "test-subnet"
        cidr: "192.168.0.0/24"
        gateway: "192.168.0.1"

    - name: Create VPC
      opentelekomcloud.cloud.vpc:
        name: "{{ vpc_name }}"
        cidr: "{{ cidr }}"
      register: vpc

    - name: Create subnet
      opentelekomcloud.cloud.subnet:
        name: "{{ subnet_name }}"
        description: "Subnet example"
        vpc: "{{ vpc_name }}"
        cidr: "{{ cidr }}"
        gateway_ip: "{{ gateway }}"
        dns_list:
          - "100.125.4.25"
          - "100.125.129.199"
      register: subnet

    - name: Assert result
      ansible.builtin.assert:
        that:
          - subnet is success
          - subnet is changed
          - subnet.subnet is defined

    - name: Check created subnet
      opentelekomcloud.cloud.subnet:
        name: "{{ subnet_name }}"
        description: "Subnet example"
        vpc: "{{ vpc_name }}"
        cidr: "{{ cidr }}"
        gateway_ip: "{{ gateway }}"
        dns_list:
          - "100.125.4.25"
          - "100.125.129.199"
      check_mode: true
      register: subnet_check_mode

    - name: Assert check result
      ansible.builtin.assert:
        that:
          - subnet_check_mode is success
          - subnet_check_mode is not changed
          - subnet_check_mode.subnet is defined

    - name: Update subnet
      opentelekomcloud.cloud.subnet:
        name: "{{ subnet_name }}"
        vpc: "{{ vpc_name }}"
        dns_list:
          - "100.125.4.25"
          - "100.125.129.199"
        dhcp_enable: false
      register: updated_subnet

    - name: Assert result
      ansible.builtin.assert:
        that:
          - updated_subnet is success
          - updated_subnet is changed
          - updated_subnet.subnet is defined

    - name: Delete subnet
      opentelekomcloud.cloud.subnet:
        name: "{{ subnet_name }}"
        vpc: "{{ vpc_name }}"
        state: absent
      register: deleted_subnet

    - name: Assert result
      ansible.builtin.assert:
        that:
          - deleted_subnet is success
          - deleted_subnet is changed

    - name: Check deleted subnet
      opentelekomcloud.cloud.subnet:
        name: "{{ subnet_name }}"
        vpc: "{{ vpc_name }}"
        state: absent
      register: deleted_subnet_check
      check_mode: true

    - name: Assert result
      ansible.builtin.assert:
        that:
          - deleted_subnet_check is success
          - deleted_subnet_check is not changed

    - name: Delete VPC
      opentelekomcloud.cloud.vpc:
        name: "{{ vpc_name }}"
        state: absent
