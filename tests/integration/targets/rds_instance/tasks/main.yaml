---
- name: RDS Instance tests
  module_defaults:
    opentelekomcloud.cloud.rds_instance:
      cloud: "{{ test_cloud }}"
  block:
    - name: Set random prefix
      ansible.builtin.set_fact:
        prefix: "{{ 99999999 | random | to_uuid | hash('md5') }}"

    - name: Set initial facts
      ansible.builtin.set_fact:
        network_name: "{{ ( prefix + 'rds_test-network') }}"
        subnet_name: "{{ ( prefix + 'rds_test-subnet') }}"
        router_name: "{{ ( prefix + 'rds_test-router') }}"
        instance_name: "{{ ( 'z-' + prefix + 'rds_test-instance') }}"
        rds_flavor: "rds.mysql.s1.medium"

    - name: Delete missing instance
      opentelekomcloud.cloud.rds_instance:
        state: absent
        name: "definitely_missing_instance"
      register: rds

    - name: assert result
      ansible.builtin.assert:
        that:
          - rds is success
          - rds is not changed

    - name: Create network for test
      openstack.cloud.network:
        cloud: "{{ test_cloud }}"
        name: "{{ network_name }}"
        state: present
      register: test_network

    - name: Create subnet for test
      openstack.cloud.subnet:
        cloud: "{{ test_cloud }}"
        name: "{{ subnet_name }}"
        state: present
        network_name: "{{ test_network.network.name }}"
        cidr: "192.168.0.0/24"
        dns_nameservers: "{{ ['100.125.4.25', '8.8.8.8'] }}"
      register: test_subnet

    - name: Create router for test
      openstack.cloud.router:
        cloud: "{{ test_cloud }}"
        name: "{{ router_name }}"
        state: present
        network: admin_external_net
        enable_snat: true
        interfaces:
          - net: "{{ test_network.network.name }}"
            subnet: "{{ test_subnet.subnet.name }}"
      register: test_router

    - name: Create RDS Instance
      opentelekomcloud.cloud.rds_instance:
        name: "{{ instance_name }}"
        datastore_type: "mysql"
        datastore_version: "8.0"
        flavor: "{{ rds_flavor }}"
        router: "{{ router_name }}"
        network: "{{ network_name }}"
        security_group: "default"
        volume_type: "common"
        volume_size: 100
        password: "Test@123"
        region: "eu-de"
        availability_zone: "eu-de-01"
        timeout: 600
      register: obj

    - name: assert result
      ansible.builtin.assert:
        that:
          - obj is success
          - obj is changed

  always:
    - name: Cleanup
      block:
        - name: Drop instance
          opentelekomcloud.cloud.rds_instance:
            name: "{{ instance_name }}"
            state: "absent"
          failed_when: false

        - name: Drop router
          openstack.cloud.router:
            cloud: "{{ test_cloud }}"
            name: "{{ router_name }}"
            state: absent
          failed_when: false

        - name: Drop subnet
          openstack.cloud.subnet:
            cloud: "{{ test_cloud }}"
            name: "{{ subnet_name }}"
            state: absent
          failed_when: false

        - name: Drop network
          openstack.cloud.network:
            cloud: "{{ test_cloud }}"
            name: "{{ network_name }}"
            state: absent
          failed_when: false
