---
- name: WAF Domain tests
  module_defaults:
    opentelekomcloud.cloud.waf_domain:
      cloud: "{{ test_cloud }}"
    opentelekomcloud.cloud.waf_domain_info:
      cloud: "{{ test_cloud }}"
    opentelekomcloud.cloud.waf_certificate:
      cloud: "{{ test_cloud }}"
  block:
    - name: Set random prefix
      ansible.builtin.set_fact:
        prefix: "{{ 99999999 | random | to_uuid | hash('md5') }}"

    - name: Set initial facts
      ansible.builtin.set_fact:
        cert_name: "{{ ( prefix + '-test_cert_ansible_collection') }}"
        cert2_name: "{{ ( prefix + '-test_cert_ansible_collection_2') }}"
        domain_name: "{{ ( prefix + '.example.com') }}"
        content: |
          -----BEGIN CERTIFICATE-----
          MIIDADCCAegCCQCUu4mu6VfH/zANBgkqhkiG9w0BAQsFADBCMQswCQYDVQQGEwJE
          RTELMAkGA1UEBwwCUEIxDDAKBgNVBAoMA1RTSTEYMBYGA1UEAwwPbXlmYWtlLnRl
          c3QuY29tMB4XDTIwMDkwMTA5Mjc1M1oXDTIxMDkwMTA5Mjc1M1owQjELMAkGA1UE
          BhMCREUxCzAJBgNVBAcMAlBCMQwwCgYDVQQKDANUU0kxGDAWBgNVBAMMD215ZmFr
          ZS50ZXN0LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOu/D4J+
          REy03ogpAr5g0qGN1apQKdMjtipksOFmSgipy8rUXaaORygZc4CMKO8Zd//FffmP
          R0YuAcp7cDA1pAM9FZ5zoO5OqH2QGr1DLutSzo1rznDBI3wUbvP1dG5ZH02ESDbi
          esBNSv+TluIG0cqI/bbEj2dXCz4gShhUY46MnYI+31ezNpL+l03ptAtyE9Is4zlY
          3oEcJWe7X1GdIoWoKvwCZjHYCqjfS4VMfLUSG9JfwKdFMc29aXupyIhKqI16deMh
          nIJ7zSftUH4vNJubcd6owOwzR66rQ/m4+3LYDpS6j9OU9aWWzpmEVM/4BD0fvyQ9
          Zj2cqOXUlrgrSxsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAcNsm1y3PgC47O7qW
          3X531EiXmXsKuFWrpQeuVgSI/PrtXCn3/Gr1GcFQDA3k5iyDsApohwbyUcpXhA6c
          842r2Flb11tMF7lxHwHGffryBeFbvCNSNYDvN9zA/XQfqpYi4UPPXPyLH0jVD0Ek
          BCqJJFFzkRbUTcvTxCUxNEYpIQC8U4RSyWXg5kTu6302YjmWaNcP3bfL4II/ddI4
          WyGW6tZI2z7GTYPutWljmtfgEto2Y3FimtiGU+P/uB6SxlESzkGEvAfEduGlyxY8
          uslYHnizLvYY6FaAdExE1TpM6YrM3b7aYMgv700CDsBCpFncQUx9tujpQxCmMoHZ
          rNcviQ==
          -----END CERTIFICATE-----
        key: |
          -----BEGIN PRIVATE KEY-----
          MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDrvw+CfkRMtN6I
          KQK+YNKhjdWqUCnTI7YqZLDhZkoIqcvK1F2mjkcoGXOAjCjvGXf/xX35j0dGLgHK
          e3AwNaQDPRWec6DuTqh9kBq9Qy7rUs6Na85wwSN8FG7z9XRuWR9NhEg24nrATUr/
          k5biBtHKiP22xI9nVws+IEoYVGOOjJ2CPt9XszaS/pdN6bQLchPSLOM5WN6BHCVn
          u19RnSKFqCr8AmYx2Aqo30uFTHy1EhvSX8CnRTHNvWl7qciISqiNenXjIZyCe80n
          7VB+LzSbm3HeqMDsM0euq0P5uPty2A6Uuo/TlPWlls6ZhFTP+AQ9H78kPWY9nKjl
          1Ja4K0sbAgMBAAECggEANJ9oceOHkWvKRLCK2T45pjBH4oWUYHoXPq1NQnMX0Yk9
          YWA4K2aVAaF0w9wFgyG3RJOsBBn0efjpE26sY0aF/ucSvVToNmm+eJDDNz4Y6hSI
          4M6QvWCPcDILdk9zFvKz5xTBHec+KVDXjec/BeMpz0D3CWYk8JdgfhStFXM46eeR
          z1KBOq51x+I0VD3Ar4T3hfKG2IViwevC/7kghBw+D1U/c4stHFCXv4JlrhFET2I6
          kquGtV38fMUdWBLRVr0wBB4orm+9rpSlTvbnDuuEJcb8rKvrLkGraUhSTqepQD6M
          lTN4BxY+3NqdnP/SKVBRoXr+gQsLdgPUAhkvTB8f0QKBgQD32mpyweaMZYTqZ8xF
          xOBzjCTGVHNlXMMt8rz9+kJ4krJ77R3L07qf+mo5bsOB2ZybHhTy7+G6QO8TXyrI
          60nbpoFR0eyWy6kdn4NtY/9BCcj13cV1D495zLr2HAveWDVVGJpLorkG5d674dtl
          wD+B5EQIliCVR5GWMeciFGrewwKBgQDzfsU+EXlKAw6KMInyRP/+nWNk0PFir01H
          Q4C/SrTM/Y8bCJ3/pWVAQsxEbQk1pOdWcdzHFf8BRncMA+OUDTxSCHJYiaqL+2pN
          nNB3/bShocMKvDodJxXWMhdM2fMLFMtYCNsjr0DM8Cqvw7oZF8MY6oxM+uWzmI5R
          nWKFMFXMyQKBgQDBK8PnKOSM69qJ7tgwUF827zUCNnOxvniIaTWPJOuFmZ/uIkIk
          yCId6Ue892z82SPLacieBwQA6/bpPDTWXzszLDSCFoC0joqCAf6m1Vbt07iCl5P7
          xmLmZQAaLIW7hzgZ2JD4/hwDGklcWY1rYkic7dFwd8FxV1RKoR4pW4xnjQKBgQDf
          nEbU9kUVg/MhUuwL8fPJxo3VstBKWUS1sjcU9S1Op3h5UhOPBzwRpIZkPGHdwr+0
          MkKXDgsuB6EiBpxDhVgk2Z7w0hQuE0gPWHhWCUaNvLkaLbuMtC0olL2zFOBPB9yp
          zxA4GCSBT/lTioJnstu3EQahVzQFF49zQf6M49OXiQKBgCqOdwZjTH5gBnDSbWMM
          WAFcxEzr5moG4nJzz/5sGqN5IRy1zDd/QkV2KEhjzWFbpGMgbgNTiLmz0BT6hUXl
          /jS27B9AOPsdktyb88+ZuEfG6dYCmPnjBiOUrovbFk5IIAmiMAUT+W9HXN9shH0g
          Ltxv392mcEGwmbfc1YJJfN2B
          -----END PRIVATE KEY-----

    - name: Create cert
      opentelekomcloud.cloud.waf_certificate:
        name: "{{ cert_name }}"
        content: "{{ content }}"
        private_key: "{{ key }}"
      register: cert

    - name: Create 2nd cert
      opentelekomcloud.cloud.waf_certificate:
        name: "{{ cert2_name }}"
        content: "{{ content }}"
        private_key: "{{ key }}"
      register: cert2

    - name: Create domain - check mode
      opentelekomcloud.cloud.waf_domain:
        state: present
        name: "{{ domain_name }}"
        server:
          - client_protocol: http
            server_protocol: http
            address: 1.1.1.1
            port: 80
        proxy: true
        sip_header_name: default
        sip_header_list:
          - X-Forwarded-For
      register: domain_check
      check_mode: true

    - name: assert result
      ansible.builtin.assert:
        that:
          - domain_check is changed

    - name: Create domain
      opentelekomcloud.cloud.waf_domain:
        state: present
        name: "{{ domain_name }}"
        # here we pass cert id explicitly
        certificate: "{{ cert.waf_certificate.id }}"
        server:
          - client_protocol: https
            server_protocol: http
            address: 1.2.3.4
            port: 80
        proxy: true
        sip_header_name: default
        sip_header_list:
          - X-Forwarded-For
      register: domain

    - name: assert result
      ansible.builtin.assert:
        that:
          - domain is success
          - domain is changed
          - domain.waf_domain is defined
          - domain.waf_domain.id is defined

    - name: Update domain server list
      opentelekomcloud.cloud.waf_domain:
        state: present
        name: "{{ domain_name }}"
        server:
          - client_protocol: https
            server_protocol: https
            address: 4.3.2.1
            port: 8080
        proxy: true
        sip_header_name: default
        sip_header_list:
          - X-Forwarded-For
      register: domain_modified

    - name: assert result
      ansible.builtin.assert:
        that:
          - domain_modified is success
          - domain_modified is changed
          - domain.waf_domain is defined
          - domain.waf_domain.id is defined

    - name: Update certificate reference in the domain
      opentelekomcloud.cloud.waf_domain:
        name: "{{ domain_name }}"
        # we want to support cert_id and name
        certificate: "{{ cert2_name }}"

    - name: Get WAF Domain with name filter info
      opentelekomcloud.cloud.waf_domain_info:
        name: "{{ domain_name }}"
      register: res

    - name: assert result
      ansible.builtin.assert:
        that:
          - res is success
          - res.waf_domains is defined
          - res.waf_domains[0].id is defined
          - res.waf_domains[0].certificate_id == cert2.waf_certificate.id

    - name: Get WAF Domain by ID
      opentelekomcloud.cloud.waf_domain_info:
        name: "{{ domain.waf_domain.id }}"
      register: res

    - name: assert result
      ansible.builtin.assert:
        that:
          - res is success
          - res.waf_domains is defined
          - res.waf_domains[0].id is defined

    - name: Drop existing domain
      opentelekomcloud.cloud.waf_domain:
        # pass ID as name
        name: "{{ domain.waf_domain.id }}"
        state: absent
      register: domain

    - name: assert result
      ansible.builtin.assert:
        that:
          - domain is success
          - domain is changed

    - name: Drop not more existing domain
      opentelekomcloud.cloud.waf_domain:
        name: "{{ domain_name }}"
        state: absent
      register: domain

    - name: assert result
      ansible.builtin.assert:
        that:
          - domain is success
          - domain is not changed

  always:
    - name: Cleanup
      block:
        - name: Drop perhaps existing domain
          opentelekomcloud.cloud.waf_domain:
            name: "{{ domain_name }}"
            state: absent
          failed_when: false

        - name: Drop certificate
          opentelekomcloud.cloud.waf_certificate:
            name: "{{ cert_name }}"
            state: absent
          failed_when: false

        - name: Drop 2nd certificate
          opentelekomcloud.cloud.waf_certificate:
            name: "{{ cert2_name }}"
            state: absent
          failed_when: false
