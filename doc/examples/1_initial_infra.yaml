---

# First, we need to create ecosystem for further infrastructure. Its include network entities, such
# VPC and subnet, security group and couple of ECSs.
- name: Create VPC
  opentelekomcloud.cloud.vpc:
    name: "{{ vpc_name }}"
    cidr: "10.10.0.0/24"
    state: present
  register: newvpc
  tags:
    - vpc

# Please pay attention on CIDR block: in case of insufficient numbers of available hosts there
# could be errors in autoscaling groups behavior
- name: Create subnet for VPC
  opentelekomcloud.cloud.subnet:
    name: "{{ vpc_subnet_name }}"
    vpc: "{{ vpc_name }}"
    cidr: "10.10.0.0/27"
    gateway_ip: "10.10.0.1"
    dns_list:
      - "100.125.4.25"
      - "100.125.129.199"
  register: sn
  tags:
    - subnet

# There are a few mismatches in resources logic and naming  between native Openstack and
# Opentelekomcloud. To make it clear we placed examples using native Openstack resources.
#
#    - name: Create network. In Open Telekom Cloud infrastructure this entity is hidden inside
# Subnet summary, and isn't create separately, but only querying from the existing Subnet.
#      openstack.cloud.os_network:
#        name: "{{ network_name }}"
#        state: present
#      register: network
#
#    - name: Create subnet. Openstack's Subnet is equal Open Telekom Cloud Subnet.
#      openstack.cloud.os_subnet:
#        name: "{{ subnet_name }}"
#        state: present
#        network_name: "{{ network.network.name }}"
#        cidr: "192.168.110.0/24"
#        dns_nameservers: "{{ ['100.125.4.25', '8.8.8.8'] }}"
#      register: subnet
#
#    - name: Create router. In Open Telekom Cloud terms it's a VPC. Please pay attention that
# Network argument here is not an Network created on previous step, but constanta for OTC.
#      openstack.cloud.os_router:
#        name: "{{ router_name }}"
#        state: present
#        network: admin_external_net
#        enable_snat: true
#        interfaces:
#          - net: "{{ network.network.name }}"
#            subnet: "{{ subnet.subnet.name }}"
#      register: router

# Exclusive mode guarantee that only explicitly passed rules are will take effect, and all of the
# existing before will be deleted. To disable this behavior set Exclusive option as False
- name: Create new security group
  opentelekomcloud.cloud.security_group:
    state: present
    name: "{{ security_group_name }}"
    description: "Security group for testing purposes"
    security_group_rules:
      - direction: "egress"
        ethertype: "IPv4"
        protocol: "tcp"
      - direction: "egress"
        ethertype: "IPv6"
      - direction: "ingress"
        ethertype: "IPv4"
        protocol: "tcp"
        port_range_max: 22
        port_range_min: 22
    exclusive: True
  register: secgroup
  tags:
    - security_group

- name: Create first ECS and attach it to the resources
  openstack.cloud.server:
    name: "{{ ecs1_name }}"
    image: "{{ ecs_image }}"
    network: "{{  newvpc.vpc.id  }}"
    flavor: "s3.medium.1"
    availability_zone: "eu-de-01"
    volume_size: 6
    security_groups: "{{ security_group_name }}"
    auto_ip: no
    state: present
  register: ecs1
  tags:
    - server1

- name: Create second ECS and attach it to the resources
  openstack.cloud.server:
    name: "{{ ecs2_name }}"
    image: "{{ ecs_image }}"
    network: "{{  newvpc.vpc.id  }}"
    flavor: "s3.medium.1"
    availability_zone: "eu-de-01"
    volume_size: 6
    security_groups: "{{ security_group_name }}"
    auto_ip: no
    state: present
  register: ecs2
  tags:
    - server2
